paths:
  /api/carts/:
    #getCarts
    get:
      summary: get all carts
      tags:
        - carts
      responses:
        200:
          description: the carts were successfully received
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/carts"
        500:
          description: problem on the server

    #addCart
    post:
      summary: add cart
      tags:
        - carts

      responses:
        200:
          description: the cart were successfully received
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/addCartSuccess"
        500:
          description: problem on the server

  /api/carts/{cid}:
    #get cart by ID
    get:
      summary: get a cart by id
      tags:
        - carts
      parameters:
        - name: cid
          in: path
          required: true
          description: ID of the cart to consult
          schema:
            $type: string
      responses:
        200:
          description: the cart were successfully received
          content:
            application/json:
              schema:
                $ref: "#components/schemas/carts"
        500:
          description: problem on the server

    #delete cart
    delete:
      summary: remove the cart
      tags:
        - carts
      parameters:
        - name: cid
          in: path
          required: true
          description: ID of the cart to remove
          schema:
            $type: string

      responses:
        200:
          description: the cart were successfully removed
          content:
            application/json:
              schema:
                $ref: "#components/schemas/deleteCartSuccess"
        500:
          description: problem on the server

  /api/carts/{cid}/products/{pid}:
    #agregar productos al carrito
    post:
      summary: add product to cart
      tags:
        - carts
      parameters:
        - name: cid
          in: path
          required: true
          description: ID of the cart to which I want to add the products
          schema:
            $type: string
        - name: pid
          in: path
          required: true
          description: ID of the product I want to add to the cart
          schema:
            $type: string
      responses:
        200:
          description: product added to cart successfully
          content:
            application/json:
              schema:
                $ref: "#components/schemas/addProductToCartSuccess"
        500:
          description: problem on the server

    #eliminar productos del carrito
    delete:
      summary: delete product in cart
      tags:
        - carts
      parameters:
        - name: cid
          in: path
          required: true
          description: ID of the cart to which I want to remove the products
          schema:
            $type: string
        - name: pid
          in: path
          required: true
          description: ID of the product I want to remove from cart
          schema:
            $type: string
      responses:
        200:
          description: product removed to cart successfully
          content:
            application/json:
              schema:
                $ref: "#components/schemas/deleteProductFromCartSuccess"
        500:
          description: problem on the server

    #actualizar productos del carrito
    put:
      summary: update product from cart
      tags:
        - carts
      parameters:
        - name: cid
          in: path
          required: true
          description: ID of the cart to update
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: ID of the product to update
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/UpdateProductCart"

      responses:
        200:
          description: the product were successfully updated
          content:
            application/json:
              schema:
                $ref: "#components/schemas/updateCartSuccess"
        500:
          description: problem on the server

  /api/carts/{cid}/purchase:

components:
  schemas:
    carts:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id generated by Mongo DB
        products:
          type: array
          description: Id generated by Mongo DB of the product in cart
        __v:
          type: number
          description: MongoDB autogenerated property used to store the number of versions of a document
      example:
        _id: 65668aac0971f5b665ba8128
        products: []
        __v: 0

    addCartSuccess:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      example:
        status: success
        message: cart added successfully

    updateCartSuccess:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      example:
        status: success
        message: cart updated successfully

    deleteCartSuccess:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      example:
        status: success
        message: cart removed successfully

    addProductToCartSuccess:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      example:
        status: success
        message: sky skirt added to cart 65668aac0971f5b665ba8128 successfully

    deleteProductFromCartSuccess:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      example:
        status: success
        message: sky skirt removed to cart 65668aac0971f5b665ba8128 successfully

  requestBodies:
    UpdateProductCart:
      type: object
      properties:
        title:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        price:
          type: number
          description: Product price
        code:
          type: string
          description: Product unique code
        stock:
          type: number
          description: Quantity of products in stock
        status:
          type: boolean
          description: Product status
        category:
          type: string
          description: Indicates whether the product belongs to the category full, top or bottom
        thumbnail:
          type: string
          description: Product image link

      example:
        title: "Sky Skirt"
        description: "Denim skirt with front pockets"
        price: 11000
        code: "PROD3"
        stock: 0
        status: true
        category: "bottom"
        thumbnail: "https://res.cloudinary.com/dqrgdohtt/image/upload/v1687800306/skySkirt_dkuofw.jpg"
